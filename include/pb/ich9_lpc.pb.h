// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ich9_lpc.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_ich9_5flpc_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_ich9_5flpc_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3019000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3019004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_ich9_5flpc_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_ich9_5flpc_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[3]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ich9_5flpc_2eproto;
class Ich9LpcState;
struct Ich9LpcStateDefaultTypeInternal;
extern Ich9LpcStateDefaultTypeInternal _Ich9LpcState_default_instance_;
class Ich9LpcState_Acpi;
struct Ich9LpcState_AcpiDefaultTypeInternal;
extern Ich9LpcState_AcpiDefaultTypeInternal _Ich9LpcState_Acpi_default_instance_;
class Ich9LpcState_Apm;
struct Ich9LpcState_ApmDefaultTypeInternal;
extern Ich9LpcState_ApmDefaultTypeInternal _Ich9LpcState_Apm_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::Ich9LpcState* Arena::CreateMaybeMessage<::Ich9LpcState>(Arena*);
template<> ::Ich9LpcState_Acpi* Arena::CreateMaybeMessage<::Ich9LpcState_Acpi>(Arena*);
template<> ::Ich9LpcState_Apm* Arena::CreateMaybeMessage<::Ich9LpcState_Apm>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

// ===================================================================

class Ich9LpcState_Apm final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Ich9LpcState.Apm) */ {
 public:
  inline Ich9LpcState_Apm() : Ich9LpcState_Apm(nullptr) {}
  ~Ich9LpcState_Apm() override;
  explicit constexpr Ich9LpcState_Apm(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Ich9LpcState_Apm(const Ich9LpcState_Apm& from);
  Ich9LpcState_Apm(Ich9LpcState_Apm&& from) noexcept
    : Ich9LpcState_Apm() {
    *this = ::std::move(from);
  }

  inline Ich9LpcState_Apm& operator=(const Ich9LpcState_Apm& from) {
    CopyFrom(from);
    return *this;
  }
  inline Ich9LpcState_Apm& operator=(Ich9LpcState_Apm&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Ich9LpcState_Apm& default_instance() {
    return *internal_default_instance();
  }
  static inline const Ich9LpcState_Apm* internal_default_instance() {
    return reinterpret_cast<const Ich9LpcState_Apm*>(
               &_Ich9LpcState_Apm_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(Ich9LpcState_Apm& a, Ich9LpcState_Apm& b) {
    a.Swap(&b);
  }
  inline void Swap(Ich9LpcState_Apm* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Ich9LpcState_Apm* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Ich9LpcState_Apm* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Ich9LpcState_Apm>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Ich9LpcState_Apm& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const Ich9LpcState_Apm& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Ich9LpcState_Apm* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Ich9LpcState.Apm";
  }
  protected:
  explicit Ich9LpcState_Apm(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kControlFieldNumber = 1,
    kStatusFieldNumber = 2,
  };
  // uint32 control = 1;
  void clear_control();
  uint32_t control() const;
  void set_control(uint32_t value);
  private:
  uint32_t _internal_control() const;
  void _internal_set_control(uint32_t value);
  public:

  // uint32 status = 2;
  void clear_status();
  uint32_t status() const;
  void set_status(uint32_t value);
  private:
  uint32_t _internal_status() const;
  void _internal_set_status(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:Ich9LpcState.Apm)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint32_t control_;
  uint32_t status_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ich9_5flpc_2eproto;
};
// -------------------------------------------------------------------

class Ich9LpcState_Acpi final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Ich9LpcState.Acpi) */ {
 public:
  inline Ich9LpcState_Acpi() : Ich9LpcState_Acpi(nullptr) {}
  ~Ich9LpcState_Acpi() override;
  explicit constexpr Ich9LpcState_Acpi(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Ich9LpcState_Acpi(const Ich9LpcState_Acpi& from);
  Ich9LpcState_Acpi(Ich9LpcState_Acpi&& from) noexcept
    : Ich9LpcState_Acpi() {
    *this = ::std::move(from);
  }

  inline Ich9LpcState_Acpi& operator=(const Ich9LpcState_Acpi& from) {
    CopyFrom(from);
    return *this;
  }
  inline Ich9LpcState_Acpi& operator=(Ich9LpcState_Acpi&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Ich9LpcState_Acpi& default_instance() {
    return *internal_default_instance();
  }
  static inline const Ich9LpcState_Acpi* internal_default_instance() {
    return reinterpret_cast<const Ich9LpcState_Acpi*>(
               &_Ich9LpcState_Acpi_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(Ich9LpcState_Acpi& a, Ich9LpcState_Acpi& b) {
    a.Swap(&b);
  }
  inline void Swap(Ich9LpcState_Acpi* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Ich9LpcState_Acpi* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Ich9LpcState_Acpi* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Ich9LpcState_Acpi>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Ich9LpcState_Acpi& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const Ich9LpcState_Acpi& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Ich9LpcState_Acpi* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Ich9LpcState.Acpi";
  }
  protected:
  explicit Ich9LpcState_Acpi(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPm1StatusFieldNumber = 1,
    kPm1EnableFieldNumber = 2,
    kPm1ControlFieldNumber = 3,
    kPm1TimerFieldNumber = 4,
    kGpe0StatusFieldNumber = 10,
    kGpe0EnableFieldNumber = 11,
    kSmiEnableFieldNumber = 12,
    kSmiStatusFieldNumber = 13,
  };
  // uint32 pm1_status = 1;
  void clear_pm1_status();
  uint32_t pm1_status() const;
  void set_pm1_status(uint32_t value);
  private:
  uint32_t _internal_pm1_status() const;
  void _internal_set_pm1_status(uint32_t value);
  public:

  // uint32 pm1_enable = 2;
  void clear_pm1_enable();
  uint32_t pm1_enable() const;
  void set_pm1_enable(uint32_t value);
  private:
  uint32_t _internal_pm1_enable() const;
  void _internal_set_pm1_enable(uint32_t value);
  public:

  // uint32 pm1_control = 3;
  void clear_pm1_control();
  uint32_t pm1_control() const;
  void set_pm1_control(uint32_t value);
  private:
  uint32_t _internal_pm1_control() const;
  void _internal_set_pm1_control(uint32_t value);
  public:

  // uint32 pm1_timer = 4;
  void clear_pm1_timer();
  uint32_t pm1_timer() const;
  void set_pm1_timer(uint32_t value);
  private:
  uint32_t _internal_pm1_timer() const;
  void _internal_set_pm1_timer(uint32_t value);
  public:

  // uint64 gpe0_status = 10;
  void clear_gpe0_status();
  uint64_t gpe0_status() const;
  void set_gpe0_status(uint64_t value);
  private:
  uint64_t _internal_gpe0_status() const;
  void _internal_set_gpe0_status(uint64_t value);
  public:

  // uint64 gpe0_enable = 11;
  void clear_gpe0_enable();
  uint64_t gpe0_enable() const;
  void set_gpe0_enable(uint64_t value);
  private:
  uint64_t _internal_gpe0_enable() const;
  void _internal_set_gpe0_enable(uint64_t value);
  public:

  // uint32 smi_enable = 12;
  void clear_smi_enable();
  uint32_t smi_enable() const;
  void set_smi_enable(uint32_t value);
  private:
  uint32_t _internal_smi_enable() const;
  void _internal_set_smi_enable(uint32_t value);
  public:

  // uint32 smi_status = 13;
  void clear_smi_status();
  uint32_t smi_status() const;
  void set_smi_status(uint32_t value);
  private:
  uint32_t _internal_smi_status() const;
  void _internal_set_smi_status(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:Ich9LpcState.Acpi)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint32_t pm1_status_;
  uint32_t pm1_enable_;
  uint32_t pm1_control_;
  uint32_t pm1_timer_;
  uint64_t gpe0_status_;
  uint64_t gpe0_enable_;
  uint32_t smi_enable_;
  uint32_t smi_status_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ich9_5flpc_2eproto;
};
// -------------------------------------------------------------------

class Ich9LpcState final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Ich9LpcState) */ {
 public:
  inline Ich9LpcState() : Ich9LpcState(nullptr) {}
  ~Ich9LpcState() override;
  explicit constexpr Ich9LpcState(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Ich9LpcState(const Ich9LpcState& from);
  Ich9LpcState(Ich9LpcState&& from) noexcept
    : Ich9LpcState() {
    *this = ::std::move(from);
  }

  inline Ich9LpcState& operator=(const Ich9LpcState& from) {
    CopyFrom(from);
    return *this;
  }
  inline Ich9LpcState& operator=(Ich9LpcState&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Ich9LpcState& default_instance() {
    return *internal_default_instance();
  }
  static inline const Ich9LpcState* internal_default_instance() {
    return reinterpret_cast<const Ich9LpcState*>(
               &_Ich9LpcState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(Ich9LpcState& a, Ich9LpcState& b) {
    a.Swap(&b);
  }
  inline void Swap(Ich9LpcState* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Ich9LpcState* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Ich9LpcState* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Ich9LpcState>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Ich9LpcState& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const Ich9LpcState& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Ich9LpcState* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Ich9LpcState";
  }
  protected:
  explicit Ich9LpcState(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Ich9LpcState_Apm Apm;
  typedef Ich9LpcState_Acpi Acpi;

  // accessors -------------------------------------------------------

  enum : int {
    kApmFieldNumber = 1,
    kAcpiFieldNumber = 2,
  };
  // .Ich9LpcState.Apm apm = 1;
  bool has_apm() const;
  private:
  bool _internal_has_apm() const;
  public:
  void clear_apm();
  const ::Ich9LpcState_Apm& apm() const;
  PROTOBUF_NODISCARD ::Ich9LpcState_Apm* release_apm();
  ::Ich9LpcState_Apm* mutable_apm();
  void set_allocated_apm(::Ich9LpcState_Apm* apm);
  private:
  const ::Ich9LpcState_Apm& _internal_apm() const;
  ::Ich9LpcState_Apm* _internal_mutable_apm();
  public:
  void unsafe_arena_set_allocated_apm(
      ::Ich9LpcState_Apm* apm);
  ::Ich9LpcState_Apm* unsafe_arena_release_apm();

  // .Ich9LpcState.Acpi acpi = 2;
  bool has_acpi() const;
  private:
  bool _internal_has_acpi() const;
  public:
  void clear_acpi();
  const ::Ich9LpcState_Acpi& acpi() const;
  PROTOBUF_NODISCARD ::Ich9LpcState_Acpi* release_acpi();
  ::Ich9LpcState_Acpi* mutable_acpi();
  void set_allocated_acpi(::Ich9LpcState_Acpi* acpi);
  private:
  const ::Ich9LpcState_Acpi& _internal_acpi() const;
  ::Ich9LpcState_Acpi* _internal_mutable_acpi();
  public:
  void unsafe_arena_set_allocated_acpi(
      ::Ich9LpcState_Acpi* acpi);
  ::Ich9LpcState_Acpi* unsafe_arena_release_acpi();

  // @@protoc_insertion_point(class_scope:Ich9LpcState)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::Ich9LpcState_Apm* apm_;
  ::Ich9LpcState_Acpi* acpi_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ich9_5flpc_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Ich9LpcState_Apm

// uint32 control = 1;
inline void Ich9LpcState_Apm::clear_control() {
  control_ = 0u;
}
inline uint32_t Ich9LpcState_Apm::_internal_control() const {
  return control_;
}
inline uint32_t Ich9LpcState_Apm::control() const {
  // @@protoc_insertion_point(field_get:Ich9LpcState.Apm.control)
  return _internal_control();
}
inline void Ich9LpcState_Apm::_internal_set_control(uint32_t value) {
  
  control_ = value;
}
inline void Ich9LpcState_Apm::set_control(uint32_t value) {
  _internal_set_control(value);
  // @@protoc_insertion_point(field_set:Ich9LpcState.Apm.control)
}

// uint32 status = 2;
inline void Ich9LpcState_Apm::clear_status() {
  status_ = 0u;
}
inline uint32_t Ich9LpcState_Apm::_internal_status() const {
  return status_;
}
inline uint32_t Ich9LpcState_Apm::status() const {
  // @@protoc_insertion_point(field_get:Ich9LpcState.Apm.status)
  return _internal_status();
}
inline void Ich9LpcState_Apm::_internal_set_status(uint32_t value) {
  
  status_ = value;
}
inline void Ich9LpcState_Apm::set_status(uint32_t value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:Ich9LpcState.Apm.status)
}

// -------------------------------------------------------------------

// Ich9LpcState_Acpi

// uint32 pm1_status = 1;
inline void Ich9LpcState_Acpi::clear_pm1_status() {
  pm1_status_ = 0u;
}
inline uint32_t Ich9LpcState_Acpi::_internal_pm1_status() const {
  return pm1_status_;
}
inline uint32_t Ich9LpcState_Acpi::pm1_status() const {
  // @@protoc_insertion_point(field_get:Ich9LpcState.Acpi.pm1_status)
  return _internal_pm1_status();
}
inline void Ich9LpcState_Acpi::_internal_set_pm1_status(uint32_t value) {
  
  pm1_status_ = value;
}
inline void Ich9LpcState_Acpi::set_pm1_status(uint32_t value) {
  _internal_set_pm1_status(value);
  // @@protoc_insertion_point(field_set:Ich9LpcState.Acpi.pm1_status)
}

// uint32 pm1_enable = 2;
inline void Ich9LpcState_Acpi::clear_pm1_enable() {
  pm1_enable_ = 0u;
}
inline uint32_t Ich9LpcState_Acpi::_internal_pm1_enable() const {
  return pm1_enable_;
}
inline uint32_t Ich9LpcState_Acpi::pm1_enable() const {
  // @@protoc_insertion_point(field_get:Ich9LpcState.Acpi.pm1_enable)
  return _internal_pm1_enable();
}
inline void Ich9LpcState_Acpi::_internal_set_pm1_enable(uint32_t value) {
  
  pm1_enable_ = value;
}
inline void Ich9LpcState_Acpi::set_pm1_enable(uint32_t value) {
  _internal_set_pm1_enable(value);
  // @@protoc_insertion_point(field_set:Ich9LpcState.Acpi.pm1_enable)
}

// uint32 pm1_control = 3;
inline void Ich9LpcState_Acpi::clear_pm1_control() {
  pm1_control_ = 0u;
}
inline uint32_t Ich9LpcState_Acpi::_internal_pm1_control() const {
  return pm1_control_;
}
inline uint32_t Ich9LpcState_Acpi::pm1_control() const {
  // @@protoc_insertion_point(field_get:Ich9LpcState.Acpi.pm1_control)
  return _internal_pm1_control();
}
inline void Ich9LpcState_Acpi::_internal_set_pm1_control(uint32_t value) {
  
  pm1_control_ = value;
}
inline void Ich9LpcState_Acpi::set_pm1_control(uint32_t value) {
  _internal_set_pm1_control(value);
  // @@protoc_insertion_point(field_set:Ich9LpcState.Acpi.pm1_control)
}

// uint32 pm1_timer = 4;
inline void Ich9LpcState_Acpi::clear_pm1_timer() {
  pm1_timer_ = 0u;
}
inline uint32_t Ich9LpcState_Acpi::_internal_pm1_timer() const {
  return pm1_timer_;
}
inline uint32_t Ich9LpcState_Acpi::pm1_timer() const {
  // @@protoc_insertion_point(field_get:Ich9LpcState.Acpi.pm1_timer)
  return _internal_pm1_timer();
}
inline void Ich9LpcState_Acpi::_internal_set_pm1_timer(uint32_t value) {
  
  pm1_timer_ = value;
}
inline void Ich9LpcState_Acpi::set_pm1_timer(uint32_t value) {
  _internal_set_pm1_timer(value);
  // @@protoc_insertion_point(field_set:Ich9LpcState.Acpi.pm1_timer)
}

// uint64 gpe0_status = 10;
inline void Ich9LpcState_Acpi::clear_gpe0_status() {
  gpe0_status_ = uint64_t{0u};
}
inline uint64_t Ich9LpcState_Acpi::_internal_gpe0_status() const {
  return gpe0_status_;
}
inline uint64_t Ich9LpcState_Acpi::gpe0_status() const {
  // @@protoc_insertion_point(field_get:Ich9LpcState.Acpi.gpe0_status)
  return _internal_gpe0_status();
}
inline void Ich9LpcState_Acpi::_internal_set_gpe0_status(uint64_t value) {
  
  gpe0_status_ = value;
}
inline void Ich9LpcState_Acpi::set_gpe0_status(uint64_t value) {
  _internal_set_gpe0_status(value);
  // @@protoc_insertion_point(field_set:Ich9LpcState.Acpi.gpe0_status)
}

// uint64 gpe0_enable = 11;
inline void Ich9LpcState_Acpi::clear_gpe0_enable() {
  gpe0_enable_ = uint64_t{0u};
}
inline uint64_t Ich9LpcState_Acpi::_internal_gpe0_enable() const {
  return gpe0_enable_;
}
inline uint64_t Ich9LpcState_Acpi::gpe0_enable() const {
  // @@protoc_insertion_point(field_get:Ich9LpcState.Acpi.gpe0_enable)
  return _internal_gpe0_enable();
}
inline void Ich9LpcState_Acpi::_internal_set_gpe0_enable(uint64_t value) {
  
  gpe0_enable_ = value;
}
inline void Ich9LpcState_Acpi::set_gpe0_enable(uint64_t value) {
  _internal_set_gpe0_enable(value);
  // @@protoc_insertion_point(field_set:Ich9LpcState.Acpi.gpe0_enable)
}

// uint32 smi_enable = 12;
inline void Ich9LpcState_Acpi::clear_smi_enable() {
  smi_enable_ = 0u;
}
inline uint32_t Ich9LpcState_Acpi::_internal_smi_enable() const {
  return smi_enable_;
}
inline uint32_t Ich9LpcState_Acpi::smi_enable() const {
  // @@protoc_insertion_point(field_get:Ich9LpcState.Acpi.smi_enable)
  return _internal_smi_enable();
}
inline void Ich9LpcState_Acpi::_internal_set_smi_enable(uint32_t value) {
  
  smi_enable_ = value;
}
inline void Ich9LpcState_Acpi::set_smi_enable(uint32_t value) {
  _internal_set_smi_enable(value);
  // @@protoc_insertion_point(field_set:Ich9LpcState.Acpi.smi_enable)
}

// uint32 smi_status = 13;
inline void Ich9LpcState_Acpi::clear_smi_status() {
  smi_status_ = 0u;
}
inline uint32_t Ich9LpcState_Acpi::_internal_smi_status() const {
  return smi_status_;
}
inline uint32_t Ich9LpcState_Acpi::smi_status() const {
  // @@protoc_insertion_point(field_get:Ich9LpcState.Acpi.smi_status)
  return _internal_smi_status();
}
inline void Ich9LpcState_Acpi::_internal_set_smi_status(uint32_t value) {
  
  smi_status_ = value;
}
inline void Ich9LpcState_Acpi::set_smi_status(uint32_t value) {
  _internal_set_smi_status(value);
  // @@protoc_insertion_point(field_set:Ich9LpcState.Acpi.smi_status)
}

// -------------------------------------------------------------------

// Ich9LpcState

// .Ich9LpcState.Apm apm = 1;
inline bool Ich9LpcState::_internal_has_apm() const {
  return this != internal_default_instance() && apm_ != nullptr;
}
inline bool Ich9LpcState::has_apm() const {
  return _internal_has_apm();
}
inline void Ich9LpcState::clear_apm() {
  if (GetArenaForAllocation() == nullptr && apm_ != nullptr) {
    delete apm_;
  }
  apm_ = nullptr;
}
inline const ::Ich9LpcState_Apm& Ich9LpcState::_internal_apm() const {
  const ::Ich9LpcState_Apm* p = apm_;
  return p != nullptr ? *p : reinterpret_cast<const ::Ich9LpcState_Apm&>(
      ::_Ich9LpcState_Apm_default_instance_);
}
inline const ::Ich9LpcState_Apm& Ich9LpcState::apm() const {
  // @@protoc_insertion_point(field_get:Ich9LpcState.apm)
  return _internal_apm();
}
inline void Ich9LpcState::unsafe_arena_set_allocated_apm(
    ::Ich9LpcState_Apm* apm) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(apm_);
  }
  apm_ = apm;
  if (apm) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Ich9LpcState.apm)
}
inline ::Ich9LpcState_Apm* Ich9LpcState::release_apm() {
  
  ::Ich9LpcState_Apm* temp = apm_;
  apm_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::Ich9LpcState_Apm* Ich9LpcState::unsafe_arena_release_apm() {
  // @@protoc_insertion_point(field_release:Ich9LpcState.apm)
  
  ::Ich9LpcState_Apm* temp = apm_;
  apm_ = nullptr;
  return temp;
}
inline ::Ich9LpcState_Apm* Ich9LpcState::_internal_mutable_apm() {
  
  if (apm_ == nullptr) {
    auto* p = CreateMaybeMessage<::Ich9LpcState_Apm>(GetArenaForAllocation());
    apm_ = p;
  }
  return apm_;
}
inline ::Ich9LpcState_Apm* Ich9LpcState::mutable_apm() {
  ::Ich9LpcState_Apm* _msg = _internal_mutable_apm();
  // @@protoc_insertion_point(field_mutable:Ich9LpcState.apm)
  return _msg;
}
inline void Ich9LpcState::set_allocated_apm(::Ich9LpcState_Apm* apm) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete apm_;
  }
  if (apm) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::Ich9LpcState_Apm>::GetOwningArena(apm);
    if (message_arena != submessage_arena) {
      apm = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, apm, submessage_arena);
    }
    
  } else {
    
  }
  apm_ = apm;
  // @@protoc_insertion_point(field_set_allocated:Ich9LpcState.apm)
}

// .Ich9LpcState.Acpi acpi = 2;
inline bool Ich9LpcState::_internal_has_acpi() const {
  return this != internal_default_instance() && acpi_ != nullptr;
}
inline bool Ich9LpcState::has_acpi() const {
  return _internal_has_acpi();
}
inline void Ich9LpcState::clear_acpi() {
  if (GetArenaForAllocation() == nullptr && acpi_ != nullptr) {
    delete acpi_;
  }
  acpi_ = nullptr;
}
inline const ::Ich9LpcState_Acpi& Ich9LpcState::_internal_acpi() const {
  const ::Ich9LpcState_Acpi* p = acpi_;
  return p != nullptr ? *p : reinterpret_cast<const ::Ich9LpcState_Acpi&>(
      ::_Ich9LpcState_Acpi_default_instance_);
}
inline const ::Ich9LpcState_Acpi& Ich9LpcState::acpi() const {
  // @@protoc_insertion_point(field_get:Ich9LpcState.acpi)
  return _internal_acpi();
}
inline void Ich9LpcState::unsafe_arena_set_allocated_acpi(
    ::Ich9LpcState_Acpi* acpi) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(acpi_);
  }
  acpi_ = acpi;
  if (acpi) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Ich9LpcState.acpi)
}
inline ::Ich9LpcState_Acpi* Ich9LpcState::release_acpi() {
  
  ::Ich9LpcState_Acpi* temp = acpi_;
  acpi_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::Ich9LpcState_Acpi* Ich9LpcState::unsafe_arena_release_acpi() {
  // @@protoc_insertion_point(field_release:Ich9LpcState.acpi)
  
  ::Ich9LpcState_Acpi* temp = acpi_;
  acpi_ = nullptr;
  return temp;
}
inline ::Ich9LpcState_Acpi* Ich9LpcState::_internal_mutable_acpi() {
  
  if (acpi_ == nullptr) {
    auto* p = CreateMaybeMessage<::Ich9LpcState_Acpi>(GetArenaForAllocation());
    acpi_ = p;
  }
  return acpi_;
}
inline ::Ich9LpcState_Acpi* Ich9LpcState::mutable_acpi() {
  ::Ich9LpcState_Acpi* _msg = _internal_mutable_acpi();
  // @@protoc_insertion_point(field_mutable:Ich9LpcState.acpi)
  return _msg;
}
inline void Ich9LpcState::set_allocated_acpi(::Ich9LpcState_Acpi* acpi) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete acpi_;
  }
  if (acpi) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::Ich9LpcState_Acpi>::GetOwningArena(acpi);
    if (message_arena != submessage_arena) {
      acpi = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, acpi, submessage_arena);
    }
    
  } else {
    
  }
  acpi_ = acpi;
  // @@protoc_insertion_point(field_set_allocated:Ich9LpcState.acpi)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_ich9_5flpc_2eproto
