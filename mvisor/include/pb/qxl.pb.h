// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: qxl.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_qxl_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_qxl_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3019000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3019004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_qxl_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_qxl_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[5]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_qxl_2eproto;
class QxlState;
struct QxlStateDefaultTypeInternal;
extern QxlStateDefaultTypeInternal _QxlState_default_instance_;
class QxlState_Drawable;
struct QxlState_DrawableDefaultTypeInternal;
extern QxlState_DrawableDefaultTypeInternal _QxlState_Drawable_default_instance_;
class QxlState_GuestPrimary;
struct QxlState_GuestPrimaryDefaultTypeInternal;
extern QxlState_GuestPrimaryDefaultTypeInternal _QxlState_GuestPrimary_default_instance_;
class QxlState_GuestSlot;
struct QxlState_GuestSlotDefaultTypeInternal;
extern QxlState_GuestSlotDefaultTypeInternal _QxlState_GuestSlot_default_instance_;
class QxlState_Surface;
struct QxlState_SurfaceDefaultTypeInternal;
extern QxlState_SurfaceDefaultTypeInternal _QxlState_Surface_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::QxlState* Arena::CreateMaybeMessage<::QxlState>(Arena*);
template<> ::QxlState_Drawable* Arena::CreateMaybeMessage<::QxlState_Drawable>(Arena*);
template<> ::QxlState_GuestPrimary* Arena::CreateMaybeMessage<::QxlState_GuestPrimary>(Arena*);
template<> ::QxlState_GuestSlot* Arena::CreateMaybeMessage<::QxlState_GuestSlot>(Arena*);
template<> ::QxlState_Surface* Arena::CreateMaybeMessage<::QxlState_Surface>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

// ===================================================================

class QxlState_GuestSlot final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:QxlState.GuestSlot) */ {
 public:
  inline QxlState_GuestSlot() : QxlState_GuestSlot(nullptr) {}
  ~QxlState_GuestSlot() override;
  explicit constexpr QxlState_GuestSlot(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  QxlState_GuestSlot(const QxlState_GuestSlot& from);
  QxlState_GuestSlot(QxlState_GuestSlot&& from) noexcept
    : QxlState_GuestSlot() {
    *this = ::std::move(from);
  }

  inline QxlState_GuestSlot& operator=(const QxlState_GuestSlot& from) {
    CopyFrom(from);
    return *this;
  }
  inline QxlState_GuestSlot& operator=(QxlState_GuestSlot&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QxlState_GuestSlot& default_instance() {
    return *internal_default_instance();
  }
  static inline const QxlState_GuestSlot* internal_default_instance() {
    return reinterpret_cast<const QxlState_GuestSlot*>(
               &_QxlState_GuestSlot_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(QxlState_GuestSlot& a, QxlState_GuestSlot& b) {
    a.Swap(&b);
  }
  inline void Swap(QxlState_GuestSlot* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QxlState_GuestSlot* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QxlState_GuestSlot* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<QxlState_GuestSlot>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const QxlState_GuestSlot& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const QxlState_GuestSlot& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QxlState_GuestSlot* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "QxlState.GuestSlot";
  }
  protected:
  explicit QxlState_GuestSlot(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMemStartFieldNumber = 1,
    kMemEndFieldNumber = 2,
    kActiveFieldNumber = 3,
  };
  // uint64 mem_start = 1;
  void clear_mem_start();
  uint64_t mem_start() const;
  void set_mem_start(uint64_t value);
  private:
  uint64_t _internal_mem_start() const;
  void _internal_set_mem_start(uint64_t value);
  public:

  // uint64 mem_end = 2;
  void clear_mem_end();
  uint64_t mem_end() const;
  void set_mem_end(uint64_t value);
  private:
  uint64_t _internal_mem_end() const;
  void _internal_set_mem_end(uint64_t value);
  public:

  // bool active = 3;
  void clear_active();
  bool active() const;
  void set_active(bool value);
  private:
  bool _internal_active() const;
  void _internal_set_active(bool value);
  public:

  // @@protoc_insertion_point(class_scope:QxlState.GuestSlot)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint64_t mem_start_;
  uint64_t mem_end_;
  bool active_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_qxl_2eproto;
};
// -------------------------------------------------------------------

class QxlState_GuestPrimary final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:QxlState.GuestPrimary) */ {
 public:
  inline QxlState_GuestPrimary() : QxlState_GuestPrimary(nullptr) {}
  ~QxlState_GuestPrimary() override;
  explicit constexpr QxlState_GuestPrimary(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  QxlState_GuestPrimary(const QxlState_GuestPrimary& from);
  QxlState_GuestPrimary(QxlState_GuestPrimary&& from) noexcept
    : QxlState_GuestPrimary() {
    *this = ::std::move(from);
  }

  inline QxlState_GuestPrimary& operator=(const QxlState_GuestPrimary& from) {
    CopyFrom(from);
    return *this;
  }
  inline QxlState_GuestPrimary& operator=(QxlState_GuestPrimary&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QxlState_GuestPrimary& default_instance() {
    return *internal_default_instance();
  }
  static inline const QxlState_GuestPrimary* internal_default_instance() {
    return reinterpret_cast<const QxlState_GuestPrimary*>(
               &_QxlState_GuestPrimary_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(QxlState_GuestPrimary& a, QxlState_GuestPrimary& b) {
    a.Swap(&b);
  }
  inline void Swap(QxlState_GuestPrimary* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QxlState_GuestPrimary* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QxlState_GuestPrimary* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<QxlState_GuestPrimary>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const QxlState_GuestPrimary& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const QxlState_GuestPrimary& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QxlState_GuestPrimary* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "QxlState.GuestPrimary";
  }
  protected:
  explicit QxlState_GuestPrimary(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kWidthFieldNumber = 1,
    kHeightFieldNumber = 2,
    kStrideFieldNumber = 3,
    kFormatFieldNumber = 4,
    kPositionFieldNumber = 5,
    kMouseModeFieldNumber = 6,
    kFlagsFieldNumber = 7,
    kTypeFieldNumber = 8,
    kMemAddressFieldNumber = 9,
  };
  // uint32 width = 1;
  void clear_width();
  uint32_t width() const;
  void set_width(uint32_t value);
  private:
  uint32_t _internal_width() const;
  void _internal_set_width(uint32_t value);
  public:

  // uint32 height = 2;
  void clear_height();
  uint32_t height() const;
  void set_height(uint32_t value);
  private:
  uint32_t _internal_height() const;
  void _internal_set_height(uint32_t value);
  public:

  // int32 stride = 3;
  void clear_stride();
  int32_t stride() const;
  void set_stride(int32_t value);
  private:
  int32_t _internal_stride() const;
  void _internal_set_stride(int32_t value);
  public:

  // uint32 format = 4;
  void clear_format();
  uint32_t format() const;
  void set_format(uint32_t value);
  private:
  uint32_t _internal_format() const;
  void _internal_set_format(uint32_t value);
  public:

  // uint32 position = 5;
  void clear_position();
  uint32_t position() const;
  void set_position(uint32_t value);
  private:
  uint32_t _internal_position() const;
  void _internal_set_position(uint32_t value);
  public:

  // uint32 mouse_mode = 6;
  void clear_mouse_mode();
  uint32_t mouse_mode() const;
  void set_mouse_mode(uint32_t value);
  private:
  uint32_t _internal_mouse_mode() const;
  void _internal_set_mouse_mode(uint32_t value);
  public:

  // uint32 flags = 7;
  void clear_flags();
  uint32_t flags() const;
  void set_flags(uint32_t value);
  private:
  uint32_t _internal_flags() const;
  void _internal_set_flags(uint32_t value);
  public:

  // uint32 type = 8;
  void clear_type();
  uint32_t type() const;
  void set_type(uint32_t value);
  private:
  uint32_t _internal_type() const;
  void _internal_set_type(uint32_t value);
  public:

  // uint64 mem_address = 9;
  void clear_mem_address();
  uint64_t mem_address() const;
  void set_mem_address(uint64_t value);
  private:
  uint64_t _internal_mem_address() const;
  void _internal_set_mem_address(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:QxlState.GuestPrimary)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint32_t width_;
  uint32_t height_;
  int32_t stride_;
  uint32_t format_;
  uint32_t position_;
  uint32_t mouse_mode_;
  uint32_t flags_;
  uint32_t type_;
  uint64_t mem_address_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_qxl_2eproto;
};
// -------------------------------------------------------------------

class QxlState_Surface final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:QxlState.Surface) */ {
 public:
  inline QxlState_Surface() : QxlState_Surface(nullptr) {}
  ~QxlState_Surface() override;
  explicit constexpr QxlState_Surface(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  QxlState_Surface(const QxlState_Surface& from);
  QxlState_Surface(QxlState_Surface&& from) noexcept
    : QxlState_Surface() {
    *this = ::std::move(from);
  }

  inline QxlState_Surface& operator=(const QxlState_Surface& from) {
    CopyFrom(from);
    return *this;
  }
  inline QxlState_Surface& operator=(QxlState_Surface&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QxlState_Surface& default_instance() {
    return *internal_default_instance();
  }
  static inline const QxlState_Surface* internal_default_instance() {
    return reinterpret_cast<const QxlState_Surface*>(
               &_QxlState_Surface_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(QxlState_Surface& a, QxlState_Surface& b) {
    a.Swap(&b);
  }
  inline void Swap(QxlState_Surface* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QxlState_Surface* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QxlState_Surface* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<QxlState_Surface>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const QxlState_Surface& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const QxlState_Surface& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QxlState_Surface* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "QxlState.Surface";
  }
  protected:
  explicit QxlState_Surface(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSlotAddressFieldNumber = 2,
    kIdFieldNumber = 1,
  };
  // uint64 slot_address = 2;
  void clear_slot_address();
  uint64_t slot_address() const;
  void set_slot_address(uint64_t value);
  private:
  uint64_t _internal_slot_address() const;
  void _internal_set_slot_address(uint64_t value);
  public:

  // uint32 id = 1;
  void clear_id();
  uint32_t id() const;
  void set_id(uint32_t value);
  private:
  uint32_t _internal_id() const;
  void _internal_set_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:QxlState.Surface)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint64_t slot_address_;
  uint32_t id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_qxl_2eproto;
};
// -------------------------------------------------------------------

class QxlState_Drawable final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:QxlState.Drawable) */ {
 public:
  inline QxlState_Drawable() : QxlState_Drawable(nullptr) {}
  ~QxlState_Drawable() override;
  explicit constexpr QxlState_Drawable(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  QxlState_Drawable(const QxlState_Drawable& from);
  QxlState_Drawable(QxlState_Drawable&& from) noexcept
    : QxlState_Drawable() {
    *this = ::std::move(from);
  }

  inline QxlState_Drawable& operator=(const QxlState_Drawable& from) {
    CopyFrom(from);
    return *this;
  }
  inline QxlState_Drawable& operator=(QxlState_Drawable&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QxlState_Drawable& default_instance() {
    return *internal_default_instance();
  }
  static inline const QxlState_Drawable* internal_default_instance() {
    return reinterpret_cast<const QxlState_Drawable*>(
               &_QxlState_Drawable_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(QxlState_Drawable& a, QxlState_Drawable& b) {
    a.Swap(&b);
  }
  inline void Swap(QxlState_Drawable* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QxlState_Drawable* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QxlState_Drawable* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<QxlState_Drawable>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const QxlState_Drawable& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const QxlState_Drawable& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QxlState_Drawable* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "QxlState.Drawable";
  }
  protected:
  explicit QxlState_Drawable(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSlotAddressFieldNumber = 1,
  };
  // uint64 slot_address = 1;
  void clear_slot_address();
  uint64_t slot_address() const;
  void set_slot_address(uint64_t value);
  private:
  uint64_t _internal_slot_address() const;
  void _internal_set_slot_address(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:QxlState.Drawable)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint64_t slot_address_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_qxl_2eproto;
};
// -------------------------------------------------------------------

class QxlState final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:QxlState) */ {
 public:
  inline QxlState() : QxlState(nullptr) {}
  ~QxlState() override;
  explicit constexpr QxlState(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  QxlState(const QxlState& from);
  QxlState(QxlState&& from) noexcept
    : QxlState() {
    *this = ::std::move(from);
  }

  inline QxlState& operator=(const QxlState& from) {
    CopyFrom(from);
    return *this;
  }
  inline QxlState& operator=(QxlState&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QxlState& default_instance() {
    return *internal_default_instance();
  }
  static inline const QxlState* internal_default_instance() {
    return reinterpret_cast<const QxlState*>(
               &_QxlState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(QxlState& a, QxlState& b) {
    a.Swap(&b);
  }
  inline void Swap(QxlState* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QxlState* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QxlState* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<QxlState>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const QxlState& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const QxlState& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QxlState* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "QxlState";
  }
  protected:
  explicit QxlState(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef QxlState_GuestSlot GuestSlot;
  typedef QxlState_GuestPrimary GuestPrimary;
  typedef QxlState_Surface Surface;
  typedef QxlState_Drawable Drawable;

  // accessors -------------------------------------------------------

  enum : int {
    kGuestSlotsFieldNumber = 2,
    kFreeResourcesFieldNumber = 5,
    kSurfacesFieldNumber = 6,
    kDrawblesFieldNumber = 7,
    kGuestPrimaryFieldNumber = 3,
  };
  // repeated .QxlState.GuestSlot guest_slots = 2;
  int guest_slots_size() const;
  private:
  int _internal_guest_slots_size() const;
  public:
  void clear_guest_slots();
  ::QxlState_GuestSlot* mutable_guest_slots(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::QxlState_GuestSlot >*
      mutable_guest_slots();
  private:
  const ::QxlState_GuestSlot& _internal_guest_slots(int index) const;
  ::QxlState_GuestSlot* _internal_add_guest_slots();
  public:
  const ::QxlState_GuestSlot& guest_slots(int index) const;
  ::QxlState_GuestSlot* add_guest_slots();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::QxlState_GuestSlot >&
      guest_slots() const;

  // repeated uint64 free_resources = 5;
  int free_resources_size() const;
  private:
  int _internal_free_resources_size() const;
  public:
  void clear_free_resources();
  private:
  uint64_t _internal_free_resources(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      _internal_free_resources() const;
  void _internal_add_free_resources(uint64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      _internal_mutable_free_resources();
  public:
  uint64_t free_resources(int index) const;
  void set_free_resources(int index, uint64_t value);
  void add_free_resources(uint64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      free_resources() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      mutable_free_resources();

  // repeated .QxlState.Surface surfaces = 6;
  int surfaces_size() const;
  private:
  int _internal_surfaces_size() const;
  public:
  void clear_surfaces();
  ::QxlState_Surface* mutable_surfaces(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::QxlState_Surface >*
      mutable_surfaces();
  private:
  const ::QxlState_Surface& _internal_surfaces(int index) const;
  ::QxlState_Surface* _internal_add_surfaces();
  public:
  const ::QxlState_Surface& surfaces(int index) const;
  ::QxlState_Surface* add_surfaces();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::QxlState_Surface >&
      surfaces() const;

  // repeated .QxlState.Drawable drawbles = 7;
  int drawbles_size() const;
  private:
  int _internal_drawbles_size() const;
  public:
  void clear_drawbles();
  ::QxlState_Drawable* mutable_drawbles(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::QxlState_Drawable >*
      mutable_drawbles();
  private:
  const ::QxlState_Drawable& _internal_drawbles(int index) const;
  ::QxlState_Drawable* _internal_add_drawbles();
  public:
  const ::QxlState_Drawable& drawbles(int index) const;
  ::QxlState_Drawable* add_drawbles();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::QxlState_Drawable >&
      drawbles() const;

  // .QxlState.GuestPrimary guest_primary = 3;
  bool has_guest_primary() const;
  private:
  bool _internal_has_guest_primary() const;
  public:
  void clear_guest_primary();
  const ::QxlState_GuestPrimary& guest_primary() const;
  PROTOBUF_NODISCARD ::QxlState_GuestPrimary* release_guest_primary();
  ::QxlState_GuestPrimary* mutable_guest_primary();
  void set_allocated_guest_primary(::QxlState_GuestPrimary* guest_primary);
  private:
  const ::QxlState_GuestPrimary& _internal_guest_primary() const;
  ::QxlState_GuestPrimary* _internal_mutable_guest_primary();
  public:
  void unsafe_arena_set_allocated_guest_primary(
      ::QxlState_GuestPrimary* guest_primary);
  ::QxlState_GuestPrimary* unsafe_arena_release_guest_primary();

  // @@protoc_insertion_point(class_scope:QxlState)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::QxlState_GuestSlot > guest_slots_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t > free_resources_;
  mutable std::atomic<int> _free_resources_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::QxlState_Surface > surfaces_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::QxlState_Drawable > drawbles_;
  ::QxlState_GuestPrimary* guest_primary_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_qxl_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// QxlState_GuestSlot

// uint64 mem_start = 1;
inline void QxlState_GuestSlot::clear_mem_start() {
  mem_start_ = uint64_t{0u};
}
inline uint64_t QxlState_GuestSlot::_internal_mem_start() const {
  return mem_start_;
}
inline uint64_t QxlState_GuestSlot::mem_start() const {
  // @@protoc_insertion_point(field_get:QxlState.GuestSlot.mem_start)
  return _internal_mem_start();
}
inline void QxlState_GuestSlot::_internal_set_mem_start(uint64_t value) {
  
  mem_start_ = value;
}
inline void QxlState_GuestSlot::set_mem_start(uint64_t value) {
  _internal_set_mem_start(value);
  // @@protoc_insertion_point(field_set:QxlState.GuestSlot.mem_start)
}

// uint64 mem_end = 2;
inline void QxlState_GuestSlot::clear_mem_end() {
  mem_end_ = uint64_t{0u};
}
inline uint64_t QxlState_GuestSlot::_internal_mem_end() const {
  return mem_end_;
}
inline uint64_t QxlState_GuestSlot::mem_end() const {
  // @@protoc_insertion_point(field_get:QxlState.GuestSlot.mem_end)
  return _internal_mem_end();
}
inline void QxlState_GuestSlot::_internal_set_mem_end(uint64_t value) {
  
  mem_end_ = value;
}
inline void QxlState_GuestSlot::set_mem_end(uint64_t value) {
  _internal_set_mem_end(value);
  // @@protoc_insertion_point(field_set:QxlState.GuestSlot.mem_end)
}

// bool active = 3;
inline void QxlState_GuestSlot::clear_active() {
  active_ = false;
}
inline bool QxlState_GuestSlot::_internal_active() const {
  return active_;
}
inline bool QxlState_GuestSlot::active() const {
  // @@protoc_insertion_point(field_get:QxlState.GuestSlot.active)
  return _internal_active();
}
inline void QxlState_GuestSlot::_internal_set_active(bool value) {
  
  active_ = value;
}
inline void QxlState_GuestSlot::set_active(bool value) {
  _internal_set_active(value);
  // @@protoc_insertion_point(field_set:QxlState.GuestSlot.active)
}

// -------------------------------------------------------------------

// QxlState_GuestPrimary

// uint32 width = 1;
inline void QxlState_GuestPrimary::clear_width() {
  width_ = 0u;
}
inline uint32_t QxlState_GuestPrimary::_internal_width() const {
  return width_;
}
inline uint32_t QxlState_GuestPrimary::width() const {
  // @@protoc_insertion_point(field_get:QxlState.GuestPrimary.width)
  return _internal_width();
}
inline void QxlState_GuestPrimary::_internal_set_width(uint32_t value) {
  
  width_ = value;
}
inline void QxlState_GuestPrimary::set_width(uint32_t value) {
  _internal_set_width(value);
  // @@protoc_insertion_point(field_set:QxlState.GuestPrimary.width)
}

// uint32 height = 2;
inline void QxlState_GuestPrimary::clear_height() {
  height_ = 0u;
}
inline uint32_t QxlState_GuestPrimary::_internal_height() const {
  return height_;
}
inline uint32_t QxlState_GuestPrimary::height() const {
  // @@protoc_insertion_point(field_get:QxlState.GuestPrimary.height)
  return _internal_height();
}
inline void QxlState_GuestPrimary::_internal_set_height(uint32_t value) {
  
  height_ = value;
}
inline void QxlState_GuestPrimary::set_height(uint32_t value) {
  _internal_set_height(value);
  // @@protoc_insertion_point(field_set:QxlState.GuestPrimary.height)
}

// int32 stride = 3;
inline void QxlState_GuestPrimary::clear_stride() {
  stride_ = 0;
}
inline int32_t QxlState_GuestPrimary::_internal_stride() const {
  return stride_;
}
inline int32_t QxlState_GuestPrimary::stride() const {
  // @@protoc_insertion_point(field_get:QxlState.GuestPrimary.stride)
  return _internal_stride();
}
inline void QxlState_GuestPrimary::_internal_set_stride(int32_t value) {
  
  stride_ = value;
}
inline void QxlState_GuestPrimary::set_stride(int32_t value) {
  _internal_set_stride(value);
  // @@protoc_insertion_point(field_set:QxlState.GuestPrimary.stride)
}

// uint32 format = 4;
inline void QxlState_GuestPrimary::clear_format() {
  format_ = 0u;
}
inline uint32_t QxlState_GuestPrimary::_internal_format() const {
  return format_;
}
inline uint32_t QxlState_GuestPrimary::format() const {
  // @@protoc_insertion_point(field_get:QxlState.GuestPrimary.format)
  return _internal_format();
}
inline void QxlState_GuestPrimary::_internal_set_format(uint32_t value) {
  
  format_ = value;
}
inline void QxlState_GuestPrimary::set_format(uint32_t value) {
  _internal_set_format(value);
  // @@protoc_insertion_point(field_set:QxlState.GuestPrimary.format)
}

// uint32 position = 5;
inline void QxlState_GuestPrimary::clear_position() {
  position_ = 0u;
}
inline uint32_t QxlState_GuestPrimary::_internal_position() const {
  return position_;
}
inline uint32_t QxlState_GuestPrimary::position() const {
  // @@protoc_insertion_point(field_get:QxlState.GuestPrimary.position)
  return _internal_position();
}
inline void QxlState_GuestPrimary::_internal_set_position(uint32_t value) {
  
  position_ = value;
}
inline void QxlState_GuestPrimary::set_position(uint32_t value) {
  _internal_set_position(value);
  // @@protoc_insertion_point(field_set:QxlState.GuestPrimary.position)
}

// uint32 mouse_mode = 6;
inline void QxlState_GuestPrimary::clear_mouse_mode() {
  mouse_mode_ = 0u;
}
inline uint32_t QxlState_GuestPrimary::_internal_mouse_mode() const {
  return mouse_mode_;
}
inline uint32_t QxlState_GuestPrimary::mouse_mode() const {
  // @@protoc_insertion_point(field_get:QxlState.GuestPrimary.mouse_mode)
  return _internal_mouse_mode();
}
inline void QxlState_GuestPrimary::_internal_set_mouse_mode(uint32_t value) {
  
  mouse_mode_ = value;
}
inline void QxlState_GuestPrimary::set_mouse_mode(uint32_t value) {
  _internal_set_mouse_mode(value);
  // @@protoc_insertion_point(field_set:QxlState.GuestPrimary.mouse_mode)
}

// uint32 flags = 7;
inline void QxlState_GuestPrimary::clear_flags() {
  flags_ = 0u;
}
inline uint32_t QxlState_GuestPrimary::_internal_flags() const {
  return flags_;
}
inline uint32_t QxlState_GuestPrimary::flags() const {
  // @@protoc_insertion_point(field_get:QxlState.GuestPrimary.flags)
  return _internal_flags();
}
inline void QxlState_GuestPrimary::_internal_set_flags(uint32_t value) {
  
  flags_ = value;
}
inline void QxlState_GuestPrimary::set_flags(uint32_t value) {
  _internal_set_flags(value);
  // @@protoc_insertion_point(field_set:QxlState.GuestPrimary.flags)
}

// uint32 type = 8;
inline void QxlState_GuestPrimary::clear_type() {
  type_ = 0u;
}
inline uint32_t QxlState_GuestPrimary::_internal_type() const {
  return type_;
}
inline uint32_t QxlState_GuestPrimary::type() const {
  // @@protoc_insertion_point(field_get:QxlState.GuestPrimary.type)
  return _internal_type();
}
inline void QxlState_GuestPrimary::_internal_set_type(uint32_t value) {
  
  type_ = value;
}
inline void QxlState_GuestPrimary::set_type(uint32_t value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:QxlState.GuestPrimary.type)
}

// uint64 mem_address = 9;
inline void QxlState_GuestPrimary::clear_mem_address() {
  mem_address_ = uint64_t{0u};
}
inline uint64_t QxlState_GuestPrimary::_internal_mem_address() const {
  return mem_address_;
}
inline uint64_t QxlState_GuestPrimary::mem_address() const {
  // @@protoc_insertion_point(field_get:QxlState.GuestPrimary.mem_address)
  return _internal_mem_address();
}
inline void QxlState_GuestPrimary::_internal_set_mem_address(uint64_t value) {
  
  mem_address_ = value;
}
inline void QxlState_GuestPrimary::set_mem_address(uint64_t value) {
  _internal_set_mem_address(value);
  // @@protoc_insertion_point(field_set:QxlState.GuestPrimary.mem_address)
}

// -------------------------------------------------------------------

// QxlState_Surface

// uint32 id = 1;
inline void QxlState_Surface::clear_id() {
  id_ = 0u;
}
inline uint32_t QxlState_Surface::_internal_id() const {
  return id_;
}
inline uint32_t QxlState_Surface::id() const {
  // @@protoc_insertion_point(field_get:QxlState.Surface.id)
  return _internal_id();
}
inline void QxlState_Surface::_internal_set_id(uint32_t value) {
  
  id_ = value;
}
inline void QxlState_Surface::set_id(uint32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:QxlState.Surface.id)
}

// uint64 slot_address = 2;
inline void QxlState_Surface::clear_slot_address() {
  slot_address_ = uint64_t{0u};
}
inline uint64_t QxlState_Surface::_internal_slot_address() const {
  return slot_address_;
}
inline uint64_t QxlState_Surface::slot_address() const {
  // @@protoc_insertion_point(field_get:QxlState.Surface.slot_address)
  return _internal_slot_address();
}
inline void QxlState_Surface::_internal_set_slot_address(uint64_t value) {
  
  slot_address_ = value;
}
inline void QxlState_Surface::set_slot_address(uint64_t value) {
  _internal_set_slot_address(value);
  // @@protoc_insertion_point(field_set:QxlState.Surface.slot_address)
}

// -------------------------------------------------------------------

// QxlState_Drawable

// uint64 slot_address = 1;
inline void QxlState_Drawable::clear_slot_address() {
  slot_address_ = uint64_t{0u};
}
inline uint64_t QxlState_Drawable::_internal_slot_address() const {
  return slot_address_;
}
inline uint64_t QxlState_Drawable::slot_address() const {
  // @@protoc_insertion_point(field_get:QxlState.Drawable.slot_address)
  return _internal_slot_address();
}
inline void QxlState_Drawable::_internal_set_slot_address(uint64_t value) {
  
  slot_address_ = value;
}
inline void QxlState_Drawable::set_slot_address(uint64_t value) {
  _internal_set_slot_address(value);
  // @@protoc_insertion_point(field_set:QxlState.Drawable.slot_address)
}

// -------------------------------------------------------------------

// QxlState

// repeated .QxlState.GuestSlot guest_slots = 2;
inline int QxlState::_internal_guest_slots_size() const {
  return guest_slots_.size();
}
inline int QxlState::guest_slots_size() const {
  return _internal_guest_slots_size();
}
inline void QxlState::clear_guest_slots() {
  guest_slots_.Clear();
}
inline ::QxlState_GuestSlot* QxlState::mutable_guest_slots(int index) {
  // @@protoc_insertion_point(field_mutable:QxlState.guest_slots)
  return guest_slots_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::QxlState_GuestSlot >*
QxlState::mutable_guest_slots() {
  // @@protoc_insertion_point(field_mutable_list:QxlState.guest_slots)
  return &guest_slots_;
}
inline const ::QxlState_GuestSlot& QxlState::_internal_guest_slots(int index) const {
  return guest_slots_.Get(index);
}
inline const ::QxlState_GuestSlot& QxlState::guest_slots(int index) const {
  // @@protoc_insertion_point(field_get:QxlState.guest_slots)
  return _internal_guest_slots(index);
}
inline ::QxlState_GuestSlot* QxlState::_internal_add_guest_slots() {
  return guest_slots_.Add();
}
inline ::QxlState_GuestSlot* QxlState::add_guest_slots() {
  ::QxlState_GuestSlot* _add = _internal_add_guest_slots();
  // @@protoc_insertion_point(field_add:QxlState.guest_slots)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::QxlState_GuestSlot >&
QxlState::guest_slots() const {
  // @@protoc_insertion_point(field_list:QxlState.guest_slots)
  return guest_slots_;
}

// .QxlState.GuestPrimary guest_primary = 3;
inline bool QxlState::_internal_has_guest_primary() const {
  return this != internal_default_instance() && guest_primary_ != nullptr;
}
inline bool QxlState::has_guest_primary() const {
  return _internal_has_guest_primary();
}
inline void QxlState::clear_guest_primary() {
  if (GetArenaForAllocation() == nullptr && guest_primary_ != nullptr) {
    delete guest_primary_;
  }
  guest_primary_ = nullptr;
}
inline const ::QxlState_GuestPrimary& QxlState::_internal_guest_primary() const {
  const ::QxlState_GuestPrimary* p = guest_primary_;
  return p != nullptr ? *p : reinterpret_cast<const ::QxlState_GuestPrimary&>(
      ::_QxlState_GuestPrimary_default_instance_);
}
inline const ::QxlState_GuestPrimary& QxlState::guest_primary() const {
  // @@protoc_insertion_point(field_get:QxlState.guest_primary)
  return _internal_guest_primary();
}
inline void QxlState::unsafe_arena_set_allocated_guest_primary(
    ::QxlState_GuestPrimary* guest_primary) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(guest_primary_);
  }
  guest_primary_ = guest_primary;
  if (guest_primary) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:QxlState.guest_primary)
}
inline ::QxlState_GuestPrimary* QxlState::release_guest_primary() {
  
  ::QxlState_GuestPrimary* temp = guest_primary_;
  guest_primary_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::QxlState_GuestPrimary* QxlState::unsafe_arena_release_guest_primary() {
  // @@protoc_insertion_point(field_release:QxlState.guest_primary)
  
  ::QxlState_GuestPrimary* temp = guest_primary_;
  guest_primary_ = nullptr;
  return temp;
}
inline ::QxlState_GuestPrimary* QxlState::_internal_mutable_guest_primary() {
  
  if (guest_primary_ == nullptr) {
    auto* p = CreateMaybeMessage<::QxlState_GuestPrimary>(GetArenaForAllocation());
    guest_primary_ = p;
  }
  return guest_primary_;
}
inline ::QxlState_GuestPrimary* QxlState::mutable_guest_primary() {
  ::QxlState_GuestPrimary* _msg = _internal_mutable_guest_primary();
  // @@protoc_insertion_point(field_mutable:QxlState.guest_primary)
  return _msg;
}
inline void QxlState::set_allocated_guest_primary(::QxlState_GuestPrimary* guest_primary) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete guest_primary_;
  }
  if (guest_primary) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::QxlState_GuestPrimary>::GetOwningArena(guest_primary);
    if (message_arena != submessage_arena) {
      guest_primary = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, guest_primary, submessage_arena);
    }
    
  } else {
    
  }
  guest_primary_ = guest_primary;
  // @@protoc_insertion_point(field_set_allocated:QxlState.guest_primary)
}

// repeated uint64 free_resources = 5;
inline int QxlState::_internal_free_resources_size() const {
  return free_resources_.size();
}
inline int QxlState::free_resources_size() const {
  return _internal_free_resources_size();
}
inline void QxlState::clear_free_resources() {
  free_resources_.Clear();
}
inline uint64_t QxlState::_internal_free_resources(int index) const {
  return free_resources_.Get(index);
}
inline uint64_t QxlState::free_resources(int index) const {
  // @@protoc_insertion_point(field_get:QxlState.free_resources)
  return _internal_free_resources(index);
}
inline void QxlState::set_free_resources(int index, uint64_t value) {
  free_resources_.Set(index, value);
  // @@protoc_insertion_point(field_set:QxlState.free_resources)
}
inline void QxlState::_internal_add_free_resources(uint64_t value) {
  free_resources_.Add(value);
}
inline void QxlState::add_free_resources(uint64_t value) {
  _internal_add_free_resources(value);
  // @@protoc_insertion_point(field_add:QxlState.free_resources)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
QxlState::_internal_free_resources() const {
  return free_resources_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
QxlState::free_resources() const {
  // @@protoc_insertion_point(field_list:QxlState.free_resources)
  return _internal_free_resources();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
QxlState::_internal_mutable_free_resources() {
  return &free_resources_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
QxlState::mutable_free_resources() {
  // @@protoc_insertion_point(field_mutable_list:QxlState.free_resources)
  return _internal_mutable_free_resources();
}

// repeated .QxlState.Surface surfaces = 6;
inline int QxlState::_internal_surfaces_size() const {
  return surfaces_.size();
}
inline int QxlState::surfaces_size() const {
  return _internal_surfaces_size();
}
inline void QxlState::clear_surfaces() {
  surfaces_.Clear();
}
inline ::QxlState_Surface* QxlState::mutable_surfaces(int index) {
  // @@protoc_insertion_point(field_mutable:QxlState.surfaces)
  return surfaces_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::QxlState_Surface >*
QxlState::mutable_surfaces() {
  // @@protoc_insertion_point(field_mutable_list:QxlState.surfaces)
  return &surfaces_;
}
inline const ::QxlState_Surface& QxlState::_internal_surfaces(int index) const {
  return surfaces_.Get(index);
}
inline const ::QxlState_Surface& QxlState::surfaces(int index) const {
  // @@protoc_insertion_point(field_get:QxlState.surfaces)
  return _internal_surfaces(index);
}
inline ::QxlState_Surface* QxlState::_internal_add_surfaces() {
  return surfaces_.Add();
}
inline ::QxlState_Surface* QxlState::add_surfaces() {
  ::QxlState_Surface* _add = _internal_add_surfaces();
  // @@protoc_insertion_point(field_add:QxlState.surfaces)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::QxlState_Surface >&
QxlState::surfaces() const {
  // @@protoc_insertion_point(field_list:QxlState.surfaces)
  return surfaces_;
}

// repeated .QxlState.Drawable drawbles = 7;
inline int QxlState::_internal_drawbles_size() const {
  return drawbles_.size();
}
inline int QxlState::drawbles_size() const {
  return _internal_drawbles_size();
}
inline void QxlState::clear_drawbles() {
  drawbles_.Clear();
}
inline ::QxlState_Drawable* QxlState::mutable_drawbles(int index) {
  // @@protoc_insertion_point(field_mutable:QxlState.drawbles)
  return drawbles_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::QxlState_Drawable >*
QxlState::mutable_drawbles() {
  // @@protoc_insertion_point(field_mutable_list:QxlState.drawbles)
  return &drawbles_;
}
inline const ::QxlState_Drawable& QxlState::_internal_drawbles(int index) const {
  return drawbles_.Get(index);
}
inline const ::QxlState_Drawable& QxlState::drawbles(int index) const {
  // @@protoc_insertion_point(field_get:QxlState.drawbles)
  return _internal_drawbles(index);
}
inline ::QxlState_Drawable* QxlState::_internal_add_drawbles() {
  return drawbles_.Add();
}
inline ::QxlState_Drawable* QxlState::add_drawbles() {
  ::QxlState_Drawable* _add = _internal_add_drawbles();
  // @@protoc_insertion_point(field_add:QxlState.drawbles)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::QxlState_Drawable >&
QxlState::drawbles() const {
  // @@protoc_insertion_point(field_list:QxlState.drawbles)
  return drawbles_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_qxl_2eproto
